"""
This script writes data to a Pub/Sub topic using the request from the API.
It gets one object at the interval of your choice.
"""

from google.cloud import pubsub_v1
import json
import time
import requests
import os
from datetime import datetime
from dateutil.relativedelta import relativedelta
import random

# TOGGLE THAT ON FOR EXECUTING ON PREMISES
service_account_key = 'serviceAccount.json'
os.environ["GOOGLE_APPLICATION_CREDENTIALS"] = service_account_key

city_code = [
4100103, 4100202, 4100301, 4100400, 4100459, 4100509, 4100608, 4100707, 4100806, 4100905, 4101002, 4101051, 4101101, 4101150, 4101200, 4101309, 4101408, 
4101507, 4101606, 4101655, 4101705, 4101804, 4101853, 4101903, 4102000, 4102109, 4102208, 4102307, 4102406, 4102505, 4102604, 4102703, 4102752, 4102802, 
4102901, 4103008, 4103024, 4103040, 4103057, 4103107, 4103156, 4103206, 4103222, 4103305, 4103354, 4103370, 4103404, 4103453, 4103479, 4103503, 4103602,
4103701, 4103800, 4103909, 4103958, 4104006, 4104055, 4104105, 4104204, 4104253, 4104303, 4104402, 4104428, 4104451, 4104501, 4104600, 4104659, 4104709, 
4104808, 4104907, 4105003, 4105102, 4105201, 4105300, 4105409, 4105508, 4105607, 4105706, 4105805, 4105904, 4106001, 4106100, 4106209, 4106308, 4106407, 
4106456, 4106506, 4106555, 4106571, 4106605, 4106704, 4106803, 4106852, 4106902, 4107009, 4107108, 4107124, 4107157, 4107207, 4107256, 4107306, 4107405, 
4107504, 4107520, 4107538, 4107546, 4107553, 4107603, 4107652, 4107702, 4107736, 4107751, 4107801, 4107850, 4107900, 4108007, 4108106, 4108205, 4108304, 
4108320, 4108403, 4108452, 4108502, 4108551, 4108601, 4108650, 4108700, 4108809, 4108908, 4108957, 4109005, 4109104, 4109203, 4109302, 4109401, 4109500, 
4109609, 4109658, 4109708, 4109757, 4109807, 4109906, 4110003, 4110052, 4110078, 4110102, 4110201, 4110300, 4110409, 4110508, 4110607, 4110656, 4110706, 
4110805, 4110904, 4110953, 4111001, 4111100, 4111209, 4111258, 4111308, 4111407, 4111506, 4111555, 4111605, 4111704, 4111803, 4111902, 4112009, 4112108, 
4112207, 4112306, 4112405, 4112504, 4112603, 4112702, 4112751, 4112801, 4112900, 4112959, 4113007, 4113106, 4113205, 4113254, 4113304, 4113403, 4113429, 
4113452, 4113502, 4113601, 4113700, 4113734, 4113759, 4113809, 4113908, 4114005, 4114104, 4114203, 4114302, 4114351, 4114401, 4114500, 4114609, 4114708, 
4114807, 4114906, 4115002, 4115101, 4115200, 4115309, 4115358, 4115408, 4115457, 4115507, 4115606, 4115705, 4115739, 4115754, 4115804, 4115853, 4115903, 
4116000, 4116059, 4116109, 4116208, 4116307, 4116406, 4116505, 4116604, 4116703, 4116802, 4116901, 4116950, 4117008, 4117057, 4117107, 4117206, 4117214, 
4117222, 4117255, 4117271, 4117297, 4117305, 4117404, 4117453, 4117503, 4117602, 4117701, 4117800, 4117909, 4118006, 4118105, 4118204, 4118303, 4118402, 
4118451, 4118501, 4118600, 4118709, 4118808, 4118857, 4118907, 4119004, 4119103, 4119152, 4119202, 4119251, 4119301, 4119400, 4119509, 4119608, 4119657, 
4119707, 4119806, 4119905, 4119954, 4120002, 4120101, 4120150, 4120200, 4120309, 4120333, 4120358, 4120408, 4120507, 4120606, 4120655, 4120705, 4120804, 
4120853, 4120903, 4121000, 4121109, 4121208, 4121257, 4121307, 4121356, 4121406, 4121505, 4121604, 4121703, 4121752, 4121802, 4121901, 4122008, 4122107, 
4122156, 4122172, 4122206, 4122305, 4122404, 4122503, 4122602, 4122651, 4122701, 4122800, 4122909, 4123006, 4123105, 4123204, 4123303, 4123402, 4123501, 
4123600, 4123709, 4123808, 4123824, 4123857, 4123907, 4123956, 4124004, 4124020, 4124053, 4124103, 4124202, 4124301, 4124400, 4124509, 4124608, 4124707, 
4124806, 4124905, 4125001, 4125100, 4125209, 4125308, 4125357, 4125407, 4125456, 4125506, 4125555, 4125605, 4125704, 4125753, 4125803, 4125902, 4126009, 
4126108, 4126207, 4126256, 4126272, 4126306, 4126355, 4126405, 4126504, 4126603, 4126652, 4126678, 4126702, 4126801, 4126900, 4127007, 4127106, 4127205, 
4127304, 4127403, 4127502, 4127601, 4127700, 4127809, 4127858, 4127882, 4127908, 4127957, 4127965, 4128005, 4128104, 4128203, 4128302, 4128401, 4128500, 
4128534, 4128559, 4128609, 4128625, 4128633, 4128658, 4128708, 4128807
]

project_id = "lab-project-416114"
topic_id = "welfare-programs-topic"
publisher = pubsub_v1.PublisherClient()
topic_path = publisher.topic_path(project_id, topic_id)

key = "34ed1e6231d354e35948e24139e48ee9"
headers = {'accept': '*/*', 'chave-api-dados': key}
ibge_code = random.choice(city_code)

start_date = '2021-11-01'
end_date = '2023-02-01'
start_datetime = datetime.strptime(start_date, "%Y-%m-%d")
end_datetime = datetime.strptime(end_date, "%Y-%m-%d")

def api_request(publisher, topic_path, headers, ibge_code, start_datetime, end_datetime):
  while start_datetime <= end_datetime:
      year_month = start_datetime.strftime("%Y%m")
      url = f"https://api.portaldatransparencia.gov.br/api-de-dados/auxilio-brasil-por-municipio"
      params = {"mesAno": year_month, "codigoIbge": ibge_code, "pagina": 1}
      response = requests.get(url, params=params, headers=headers)

      if response.status_code == 200:
          data = response.json()
          print(f"Data for {year_month} retrieved successfully.")
          
          for item in data:
              data_str = json.dumps(item, ensure_ascii=False)
              publisher.publish(topic_path, data_str.encode("utf-8"))
              print("Published message.")
              time.sleep(5)
      else:
          print(f"Error for {year_month}: {response.status_code}, {response.text}")

      start_datetime += relativedelta(months=1)

api_request(publisher, topic_path, headers, ibge_code, start_datetime, end_datetime)
